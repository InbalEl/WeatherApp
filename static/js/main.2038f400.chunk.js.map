{"version":3,"sources":["components/DayEntry/DayEntry.jsx","components/DaysRow/DaysRow.jsx","components/CityButton/CityButton.jsx","components/CitySelector/CitySelector.jsx","App.js","reportWebVitals.js","redux-store/redux-store.js","index.js"],"names":["DayEntry","props","className","info","day","degrees","description","DaysRow","dayInfo","map","singelDay","idx","CityButton","onClick","city","name","CitySelector","dispatch","useDispatch","onClickHandler","type","citySymbol","symbol","cities","App","useSelector","state","selectedCity","daysInfo","weather","cityName","find","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","action","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","reduxStore","document","getElementById"],"mappings":"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","file":"static/js/main.2038f400.chunk.js","sourcesContent":["import './DayEntry.css'\n\nfunction DayEntry(props) {\n\n    return (\n        <div className='single-day-container'>\n            <h2>{props.info.day}</h2>\n            <h4>{props.info.degrees}</h4>\n            <p>{props.info.description}</p>\n        </div>\n    )\n}\n\nexport default DayEntry","import DayEntry from \"../DayEntry/DayEntry\";\nimport './DaysRow.css'\nfunction DaysRow(props) {\n    \n    return (\n        <div className='days-row-container'>\n            {props.dayInfo.map((singelDay, idx) => <DayEntry key={idx} info={singelDay}/>)}\n        </div>\n    )\n}\n\nexport default DaysRow\n","import './CityButton.css'\n\nfunction CityButton(props) {\n    return (\n        <button className='city-button'\n        onClick={() => props.onClick(props.city)}>\n            {props.city.name}\n        </button>\n    )\n}\n\nexport default CityButton","import CityButton from '../CityButton/CityButton'\nimport {useDispatch} from 'react-redux';\nimport './CitySelector.css'\n\nfunction CitySelector(props) {\n\n    const dispatch = useDispatch()\n\n    function onClickHandler(city) {\n        dispatch({type: 'SET_CITY', citySymbol: city.symbol})\n    }\n\n    return (\n        <div className='city-buttons-row'>\n            {\n                props.cities.map((city) =>\n                    <CityButton\n                    onClick={onClickHandler}\n                    key={city.name}\n                    city={city}/>\n            )}\n        </div>\n    )\n}\n\nexport default CitySelector","import './App.css';\nimport DaysRow from './components/DaysRow/DaysRow';\nimport CitySelector from './components/CitySelector/CitySelector';\nimport {useSelector} from 'react-redux';\n\nfunction App() {\n       \n    const citySymbol = useSelector((state) => state.selectedCity);\n    const cities = useSelector((state) => state.cities);\n    const daysInfo = useSelector((state) => state.weather[citySymbol]);\n    const cityName = useSelector(\n      state => state.cities.find((city) => city.symbol === citySymbol).name\n    );\n    \n    return (\n    <div>\n        <h1 className=\"page-title\">{daysInfo.length}-day Forcast</h1>\n        <h3 className=\"page-subtitle\">{cityName}</h3>\n        <DaysRow dayInfo={daysInfo}/>\n        <CitySelector cities={cities}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from 'redux'\n\nconst initialState = {\n    selectedCity: 'HAF',\n    cities: [\n        {name: 'Haifa', symbol: 'HAF'},\n        {name: 'Tel-Aviv', symbol: 'TLV'},\n        {name: 'Jerusalem', symbol: 'JLM'}\n    ],\n    weather: {\n        'HAF' : [{day:'Sunday', degrees:'28', description:'Nice and sunny'},\n                 {day:'Monday', degrees:'24', description:'Nice and sunny'},\n                 {day:'Tuesday', degrees:'22', description:'Clear and cool'},\n                 {day:'Wednesday', degrees:'29', description:'Nice and sunny'},\n                 {day:'Thursday', degrees:'31', description:'Very hot'}],\n        \n        'TLV' : [{day:'Sunday', degrees:'31', description:'Very hot'},\n                 {day:'Monday', degrees:'28', description:'Nice and sunny'},\n                 {day:'Tuesday', degrees:'25', description:'Perfect day'},\n                 {day:'Wednesday', degrees:'27', description:'Nice and sunny'},\n                 {day:'Thursday', degrees:'34', description:'Satan\\'s balls'}],\n        \n        'JLM' : [{day:'Sunday', degrees:'25', description:'Nice and sunny'},\n                 {day:'Monday', degrees:'23', description:'Nice and sunny'},\n                 {day:'Tuesday', degrees:'21', description:'Clear and cool'},\n                 {day:'Wednesday', degrees:'18', description:'A Bit Cold'},\n                 {day:'Thursday', degrees:'19', description:'A Bit Cold'}]\n    }\n}\n\nfunction reducer(state, action) {\n    if (action.type === 'SET_CITY') {\n        return { ...state, selectedCity: action.citySymbol }\n    }\n\n    return state\n}\n\nexport default createStore(reducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport reduxStore from './redux-store/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={reduxStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}